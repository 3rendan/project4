{"ast":null,"code":"var _jsxFileName = \"/Users/br/Code/project4/record_client/src/components/Records.js\";\nimport React, { Component } from 'react';\n\nclass Records extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      records: []\n    };\n\n    this.getRecords = () => {\n      fetch('http://localhost:3000/records').then(response => response.json()).then(json => this.setState({\n        records: json\n      })).catch(error => console.error(error));\n    };\n  }\n\n  componentDidMount() {\n    this.getRecords();\n  }\n\n  render() {\n    console.log(this.state.records);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.state.records.map(record => {\n      return React.createElement(\"div\", {\n        key: record.id,\n        className: \"record col-sm-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, record.artist, \" : \", record.title, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"It was released in \", record.year, \" on \", record.label), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"It is an \", record.format));\n    }));\n  }\n\n}\n\nexport default Records;","map":{"version":3,"sources":["/Users/br/Code/project4/record_client/src/components/Records.js"],"names":["React","Component","Records","state","records","getRecords","fetch","then","response","json","setState","catch","error","console","componentDidMount","render","log","map","record","id","artist","title","year","label","format"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACJC,MAAAA,OAAO,EAAE;AADL,KADsB;;AAAA,SAS9BC,UAT8B,GASjB,MAAK;AACdC,MAAAA,KAAK,CAAC,+BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAEK;AAAV,OAAd,CAFlB,EAGCE,KAHD,CAGOC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAHhB;AAIH,KAd6B;AAAA;;AAK9BE,EAAAA,iBAAiB,GAAG;AAChB,SAAKT,UAAL;AACH;;AAQDU,EAAAA,MAAM,GAAI;AACRF,IAAAA,OAAO,CAACG,GAAR,CAAY,KAAKb,KAAL,CAAWC,OAAvB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWC,OAAX,CAAmBa,GAAnB,CAAwBC,MAAM,IAAI;AAC/B,aACI;AAAK,QAAA,GAAG,EAAEA,MAAM,CAACC,EAAjB;AAAqB,QAAA,SAAS,EAAC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMD,MAAM,CAACE,MAAb,SAA0BF,MAAM,CAACG,KAAjC,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAwBH,MAAM,CAACI,IAA/B,UAA2CJ,MAAM,CAACK,KAAlD,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBL,MAAM,CAACM,MAAxB,CAHJ,CADJ;AAOH,KARA,CADH,CADF;AAaD;;AA9B6B;;AAiChC,eAAetB,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Records extends Component {\n  state = {\n      records: []\n  }\n\n  componentDidMount() {\n      this.getRecords();\n  }\n\n  getRecords = () =>{\n      fetch('http://localhost:3000/records')\n          .then(response => response.json())\n          .then(json => this.setState({records: json}))\n      .catch(error => console.error(error))\n  }\n  render () {\n    console.log(this.state.records);\n    return (\n      <div>\n        {this.state.records.map( record => {\n            return  (\n                <div key={record.id} className=\"record col-sm-9\">\n                    <h3>{ record.artist } : { record.title } </h3>\n                    <p>It was released in { record.year } on { record.label }</p>\n                    <small>It is an {record.format }</small>\n                </div>\n            )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default Records;\n"]},"metadata":{},"sourceType":"module"}