{"ast":null,"code":"var _jsxFileName = \"/Users/br/Code/project4/record_client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Route from 'react-router-dom/Route';\nimport Records from './components/Records.js';\nimport NewRecords from './components/NewRecords.js';\nimport Update from './components/Update.js';\nimport Show from './components/Show.js';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      records: false\n    };\n\n    this.getRecords = () => {\n      fetch('http://localhost:3000/records').then(response => response.json()).then(json => this.setState({\n        records: json\n      })).catch(error => console.error(error));\n    };\n\n    this.showRecord = id => {\n      fetch(`http://localhost:3000/records/${id}`).then(response => response.json()).then(json => this.setState({\n        records: json\n      })).catch(error => console.error(error));\n    };\n\n    this.handleUpdate = id => {\n      // e.preventDefault();\n      // console.log(`http://localhost:3001/records/${id}`)\n      const records = {\n        artist: this.state.artist,\n        title: this.state.title,\n        format: this.state.format,\n        label: this.state.label,\n        year: this.state.year\n      };\n      const updatedRecord = [];\n      console.log(id);\n      fetch(`http://localhost:3000/records/${id}`, {\n        method: 'PUT'\n      }).then(updatedRecord => {\n        return updatedRecord.json();\n      }).then(updatedRecord => {\n        // updatedRecord.push(records);\n        console.log(updatedRecord); // this.props.getRecords()\n      }).catch(error => console.log(error));\n    };\n\n    this.deleteRecord = (id, i) => {\n      fetch('http://localhost:3000/records/' + id, {\n        method: 'DELETE'\n      }).then(data => {\n        this.setState({\n          records: [...this.state.records.slice(0, i), ...this.state.records.slice(i + 1)]\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getRecords();\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"A Collection of Physical Recordings\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"BEETLEJUICE\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(React.Fragment, null, React.createElement(Route, {\n      path: \"/skeletor\",\n      exact: true,\n      render: () => {\n        return React.createElement(\"div\", {\n          clasName: \"col-sm-offset-4 col-sm-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"SKELETOR | loving kindness\"), React.createElement(\"img\", {\n          src: \"/src/mettaSkeletor.jpg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(React.Fragment, null, React.createElement(NewRecords, {\n      records: this.state.records,\n      getRecords: this.getRecords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(React.Fragment, null, React.createElement(Records, {\n      deleteRecord: this.deleteRecord,\n      handleUpdate: this.handleUpdate,\n      records: this.state.records,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/br/Code/project4/record_client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Records","NewRecords","Update","Show","axios","App","Component","state","records","getRecords","fetch","then","response","json","setState","catch","error","console","showRecord","id","handleUpdate","artist","title","format","label","year","updatedRecord","log","method","deleteRecord","i","data","slice","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Route from 'react-router-dom/Route'\nimport Records from './components/Records.js'\nimport NewRecords from './components/NewRecords.js'\nimport Update from './components/Update.js'\nimport Show from './components/Show.js'\nimport axios from 'axios'\n\nclass App extends React.Component {\n  state = {\n    records: false\n  }\n  componentDidMount() {\n  this.getRecords()\n}\n  getRecords = () =>{\n    fetch('http://localhost:3000/records')\n      .then(response => response.json())\n      .then(json => this.setState({records: json}))\n      .catch(error => console.error(error))\n  }\n  showRecord = (id) => {\n    fetch(`http://localhost:3000/records/${id}`)\n    .then(response => response.json())\n    .then(json => this.setState({records: json}))\n    .catch(error => console.error(error))\n  }\n  handleUpdate = (id) => {\n      // e.preventDefault();\n      // console.log(`http://localhost:3001/records/${id}`)\n      const records = {\n          artist: this.state.artist,\n          title: this.state.title,\n          format: this.state.format,\n          label: this.state.label,\n          year: this.state.year\n      };\n      const updatedRecord = [];\n      console.log(id)\n      fetch(`http://localhost:3000/records/${id}`,\n        {\n          method: 'PUT'\n        })\n       .then(updatedRecord => {\n         return updatedRecord.json()\n       })\n       .then(updatedRecord => {\n         // updatedRecord.push(records);\n         console.log(updatedRecord)\n         // this.props.getRecords()\n       })\n       .catch(error => console.log(error))\n      }\n  deleteRecord = (id, i) =>{\n    fetch('http://localhost:3000/records/' + id,\n      {\n        method: 'DELETE'\n      })\n      .then(data => {\n        this.setState({\n          records: [\n            ...this.state.records.slice(0, i),\n            ...this.state.records.slice(i + 1)\n          ]\n        })\n      })\n    }\nrender(){\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className='container'>\n          <div className=\"App-header\">\n            <h1>A Collection of Physical Recordings</h1>\n          </div>\n          <div className='row'>\n              <><Route path=\"/\" exact render= {\n                () => {\n                  return ( <h1>BEETLEJUICE</h1> );\n                }\n              }/></>\n              <><Route path=\"/skeletor\" exact render= {\n                () => {\n                  return (\n                    <div clasName=\"col-sm-offset-4 col-sm-6\">\n                      <h1>SKELETOR | loving kindness</h1>\n                      <img src=\"/src/mettaSkeletor.jpg\" />\n                    </div>\n                  );\n                }\n              }/></>\n              <>\n                <NewRecords records={this.state.records} getRecords={this.getRecords} />\n              </>\n              <>\n                <Records deleteRecord={this.deleteRecord} handleUpdate={this.handleUpdate} records={this.state.records} />\n              </>\n            </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}