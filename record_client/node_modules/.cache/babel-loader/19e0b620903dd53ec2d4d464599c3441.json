{"ast":null,"code":"var _jsxFileName = \"/Users/br/Code/project4/record_client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Records from './components/Records.js';\nimport NewRecords from './components/NewRecords.js';\nimport Update from './components/Update.js';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      records: false\n    };\n\n    this.getRecords = () => {\n      fetch('http://localhost:3000/records').then(response => response.json()).then(json => this.setState({\n        records: json\n      })).catch(error => console.error(error));\n    };\n\n    this.handleUpdate = id => {\n      // e.preventDefault();\n      console.log(`http://localhost:3001/records/${id}`); // const records = {\n      //     artist: this.state.artist,\n      //     title: this.state.title,\n      //     format: this.state.format,\n      //     label: this.state.label,\n      //     year: this.state.year\n      // };\n      // const updatedRecord = [];\n      // updatedRecord.push(records);\n      // if(this.state.title){\n      //     axios.put(`http://localhost:3001/records/${id}/`, {...records})\n      // }\n    };\n\n    this.deleteRecord = (id, i) => {\n      fetch('http://localhost:3000/records/' + id, {\n        method: 'DELETE'\n      }).then(data => {\n        this.setState({\n          records: [...this.state.records.slice(0, i), ...this.state.records.slice(i + 1)]\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getRecords();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"A Collection of Physical Recordings\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(NewRecords, {\n      records: this.state.records,\n      getRecords: this.getRecords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(React.Fragment, null, React.createElement(Records, {\n      deleteRecord: this.deleteRecord,\n      handleUpdate: this.handleUpdate,\n      records: this.state.records,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/br/Code/project4/record_client/src/App.js"],"names":["React","Records","NewRecords","Update","axios","App","Component","state","records","getRecords","fetch","then","response","json","setState","catch","error","console","handleUpdate","id","log","deleteRecord","i","method","data","slice","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAE;AADH,KADwB;;AAAA,SAOlCC,UAPkC,GAOrB,MAAK;AAChBC,MAAAA,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAEK;AAAV,OAAd,CAFhB,EAGGE,KAHH,CAGSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAHlB;AAID,KAZiC;;AAAA,SAclCE,YAdkC,GAclBC,EAAD,IAAQ;AACnB;AACAF,MAAAA,OAAO,CAACG,GAAR,CAAa,iCAAgCD,EAAG,EAAhD,EAFmB,CAGnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KA7BiC;;AAAA,SA8BlCE,YA9BkC,GA8BnB,CAACF,EAAD,EAAKG,CAAL,KAAU;AACvBZ,MAAAA,KAAK,CAAC,mCAAmCS,EAApC,EACH;AACEI,QAAAA,MAAM,EAAE;AADV,OADG,CAAL,CAIGZ,IAJH,CAIQa,IAAI,IAAI;AACZ,aAAKV,QAAL,CAAc;AACZN,UAAAA,OAAO,EAAE,CACP,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBiB,KAAnB,CAAyB,CAAzB,EAA4BH,CAA5B,CADI,EAEP,GAAG,KAAKf,KAAL,CAAWC,OAAX,CAAmBiB,KAAnB,CAAyBH,CAAC,GAAG,CAA7B,CAFI;AADG,SAAd;AAMD,OAXH;AAYD,KA3CiC;AAAA;;AAIhCI,EAAAA,iBAAiB,GAAG;AACpB,SAAKjB,UAAL;AACD;;AAsCDkB,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,CADA,EAIE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,0CACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKpB,KAAL,CAAWC,OAAhC;AAAyC,MAAA,UAAU,EAAE,KAAKC,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,0CACE,oBAAC,OAAD;AAAS,MAAA,YAAY,EAAE,KAAKY,YAA5B;AAA0C,MAAA,YAAY,EAAE,KAAKH,YAA7D;AAA2E,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWC,OAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CAJF,CADF,CADF;AAiBD;;AA9DiC;;AAiElC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Records from './components/Records.js'\nimport NewRecords from './components/NewRecords.js'\nimport Update from './components/Update.js'\nimport axios from 'axios'\n\nclass App extends React.Component {\n  state = {\n    records: false\n  }\n  componentDidMount() {\n  this.getRecords()\n}\ngetRecords = () =>{\n  fetch('http://localhost:3000/records')\n    .then(response => response.json())\n    .then(json => this.setState({records: json}))\n    .catch(error => console.error(error))\n}\n\nhandleUpdate = (id) => {\n    // e.preventDefault();\n    console.log(`http://localhost:3001/records/${id}`)\n    // const records = {\n    //     artist: this.state.artist,\n    //     title: this.state.title,\n    //     format: this.state.format,\n    //     label: this.state.label,\n    //     year: this.state.year\n    // };\n    // const updatedRecord = [];\n    // updatedRecord.push(records);\n    // if(this.state.title){\n    //     axios.put(`http://localhost:3001/records/${id}/`, {...records})\n    // }\n}\ndeleteRecord = (id, i) =>{\n  fetch('http://localhost:3000/records/' + id,\n    {\n      method: 'DELETE'\n    })\n    .then(data => {\n      this.setState({\n        records: [\n          ...this.state.records.slice(0, i),\n          ...this.state.records.slice(i + 1)\n        ]\n      })\n    })\n}\nrender(){\n  return (\n    <div className=\"App\">\n      <div className='container'>\n      <div className=\"App-header\">\n        <h1>A Collection of Physical Recordings</h1>\n      </div>\n        <div className='row'>\n          <>\n            <NewRecords records={this.state.records} getRecords={this.getRecords} />\n          </>\n          <>\n            <Records deleteRecord={this.deleteRecord} handleUpdate={this.handleUpdate} records={this.state.records} />\n          </>\n        </div>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}