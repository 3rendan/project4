{"ast":null,"code":"var _jsxFileName = \"/Users/br/Code/project4/record_client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Records from './components/Records.js';\nimport NewRecords from './components/NewRecords.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      records: false\n    };\n\n    this.getRecords = () => {\n      fetch('http://localhost:3000/records').then(response => response.json()).then(json => this.setState({\n        records: json\n      })).catch(error => console.error(error));\n    };\n\n    this.deleteRecord = (id, i) => {\n      fetch('http://localhost:3000/records/' + id, {\n        method: 'DELETE'\n      }).then(data => {\n        this.setState({\n          records: [...this.state.records.slice(0, i), ...this.state.records.slice(i + 1)]\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getRecords();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(NewRecords, {\n      records: this.state.records,\n      getRecords: this.getRecords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(React.Fragment, null, React.createElement(Records, {\n      deleteRecord: this.deleteRecord,\n      records: this.state.records,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/br/Code/project4/record_client/src/App.js"],"names":["React","Records","NewRecords","App","Component","state","records","getRecords","fetch","then","response","json","setState","catch","error","console","deleteRecord","id","i","method","data","slice","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AACA,MAAMC,GAAN,SAAkBC,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BC,KAD0B,GAClB;AACNC,MAAAA,OAAO,EAAE;AADH,KADkB;;AAAA,SAO5BC,UAP4B,GAOf,MAAK;AAChBC,MAAAA,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAEK;AAAV,OAAd,CAFhB,EAGGE,KAHH,CAGSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAHlB;AAID,KAZ2B;;AAAA,SAa5BE,YAb4B,GAab,CAACC,EAAD,EAAKC,CAAL,KAAU;AACvBV,MAAAA,KAAK,CAAC,mCAAmCS,EAApC,EACH;AACEE,QAAAA,MAAM,EAAE;AADV,OADG,CAAL,CAIGV,IAJH,CAIQW,IAAI,IAAI;AACZ,aAAKR,QAAL,CAAc;AACZN,UAAAA,OAAO,EAAE,CACP,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBe,KAAnB,CAAyB,CAAzB,EAA4BH,CAA5B,CADI,EAEP,GAAG,KAAKb,KAAL,CAAWC,OAAX,CAAmBe,KAAnB,CAAyBH,CAAC,GAAG,CAA7B,CAFI;AADG,SAAd;AAMD,OAXH;AAYD,KA1B2B;AAAA;;AAI1BI,EAAAA,iBAAiB,GAAG;AACpB,SAAKf,UAAL;AACD;;AAqBDgB,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,0CACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWC,OAAhC;AAAyC,MAAA,UAAU,EAAE,KAAKC,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,0CACE,oBAAC,OAAD;AAAS,MAAA,YAAY,EAAE,KAAKS,YAA5B;AAA0C,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF,CADF,CADF;AAcD;;AA1C2B;;AA6C5B,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Records from './components/Records.js'\nimport NewRecords from './components/NewRecords.js'\nclass App extends Component {\n  state = {\n    records: false\n  }\n  componentDidMount() {\n  this.getRecords()\n}\ngetRecords = () =>{\n  fetch('http://localhost:3000/records')\n    .then(response => response.json())\n    .then(json => this.setState({records: json}))\n    .catch(error => console.error(error))\n}\ndeleteRecord = (id, i) =>{\n  fetch('http://localhost:3000/records/' + id,\n    {\n      method: 'DELETE'\n    })\n    .then(data => {\n      this.setState({\n        records: [\n          ...this.state.records.slice(0, i),\n          ...this.state.records.slice(i + 1)\n        ]\n      })\n    })\n}\nrender(){\n  return (\n    <div className=\"App\">\n      <div className='container'>\n        <div className='row'>\n          <>\n            <NewRecords records={this.state.records} getRecords={this.getRecords} />\n          </>\n          <>\n            <Records deleteRecord={this.deleteRecord} records={this.state.records} />\n          </>\n        </div>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}