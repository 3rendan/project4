{"ast":null,"code":"var _jsxFileName = \"/Users/br/Code/project4/record_client/src/components/Records.js\";\nimport React, { Component } from 'react';\n\nclass Records extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getRecords = () => {\n      fetch('http://localhost:3000/records').then(response => response.json()).then(json => this.setState({\n        records: json\n      })).catch(error => console.error(error));\n    };\n\n    this.deleteRecord = id => {\n      const index = id - 1;\n      fetch('records/' + id, {\n        method: 'GET'\n      }).then(data => {\n        this.setState({\n          records: [...this.state.records.slice(0, index), ...this.state.records.slice(index + 1)]\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getRecords();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.records.map(record => {\n      return React.createElement(\"div\", {\n        key: record.id,\n        className: \"records\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, record.artist, \" : \", record.title, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"It was released in \", record.year, \" on \", record.label), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"It is an \", record.format), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => this.deleteRecord(record.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \" X \"));\n    }));\n  }\n\n}\n\nexport default Records;","map":{"version":3,"sources":["/Users/br/Code/project4/record_client/src/components/Records.js"],"names":["React","Component","Records","getRecords","fetch","then","response","json","setState","records","catch","error","console","deleteRecord","id","index","method","data","state","slice","componentDidMount","render","props","map","record","artist","title","year","label","format"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAO9BE,UAP8B,GAOjB,MAAK;AACdC,MAAAA,KAAK,CAAC,+BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAEF;AAAV,OAAd,CAFlB,EAGCG,KAHD,CAGOC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAHhB;AAIH,KAZ6B;;AAAA,SAa9BE,YAb8B,GAadC,EAAD,IAAO;AACpB,YAAMC,KAAK,GAAGD,EAAE,GAAG,CAAnB;AACAV,MAAAA,KAAK,CAAC,aAAaU,EAAd,EACH;AACEE,QAAAA,MAAM,EAAE;AADV,OADG,CAAL,CAIGX,IAJH,CAIQY,IAAI,IAAI;AACZ,aAAKT,QAAL,CAAc;AACZC,UAAAA,OAAO,EAAE,CACP,GAAG,KAAKS,KAAL,CAAWT,OAAX,CAAmBU,KAAnB,CAAyB,CAAzB,EAA4BJ,KAA5B,CADI,EAEP,GAAG,KAAKG,KAAL,CAAWT,OAAX,CAAmBU,KAAnB,CAAyBJ,KAAK,GAAG,CAAjC,CAFI;AADG,SAAd;AAMD,OAXH;AAYD,KA3B6B;AAAA;;AAG9BK,EAAAA,iBAAiB,GAAG;AAChB,SAAKjB,UAAL;AACH;;AAuBDkB,EAAAA,MAAM,GAAI;AACR,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKC,KAAL,CAAWb,OAAX,CAAmBc,GAAnB,CAAwBC,MAAM,IAAI;AAChC,aACI;AAAK,QAAA,GAAG,EAAEA,MAAM,CAACV,EAAjB;AAAqB,QAAA,SAAS,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMU,MAAM,CAACC,MAAb,SAA0BD,MAAM,CAACE,KAAjC,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAwBF,MAAM,CAACG,IAA/B,UAA2CH,MAAM,CAACI,KAAlD,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBJ,MAAM,CAACK,MAAzB,CAHJ,EAG6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAH7C,EAII;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKhB,YAAL,CAAkBW,MAAM,CAACV,EAAzB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,CADJ;AAQH,KATC,CADJ,CADF;AAcD;;AA3C6B;;AA8ChC,eAAeZ,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Records extends Component {\n\n\n  componentDidMount() {\n      this.getRecords();\n  }\n\n  getRecords = () =>{\n      fetch('http://localhost:3000/records')\n          .then(response => response.json())\n          .then(json => this.setState({records: json}))\n      .catch(error => console.error(error))\n  }\n  deleteRecord = (id) =>{\n    const index = id - 1;\n    fetch('records/' + id,\n      {\n        method: 'GET'\n      })\n      .then(data => {\n        this.setState({\n          records: [\n            ...this.state.records.slice(0, index),\n            ...this.state.records.slice(index + 1)\n          ]\n        })\n      })\n  }\n  render () {\n    return (\n      <div className=\"col-sm-9\">\n        { this.props.records.map( record => {\n            return  (\n                <div key={record.id} className=\"records\">\n                    <h3>{ record.artist } : { record.title } </h3>\n                    <p>It was released in { record.year } on { record.label }</p>\n                    <small>It is an { record.format }</small><br />\n                    <button onClick={() => this.deleteRecord(record.id)}> X </button>\n                </div>\n            )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default Records;\n"]},"metadata":{},"sourceType":"module"}