{"ast":null,"code":"var _jsxFileName = \"/Users/br/Code/project4/record_client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Link, NavLink } from 'react-router-dom';\nimport Route from 'react-router-dom/Route';\nimport Records from './components/Records.js';\nimport NewRecords from './components/NewRecords.js';\nimport Update from './components/Update.js'; // import Show from './components/Show.js';\n\nimport axios from 'axios';\n\nconst Indy = ({\n  match\n}) => {\n  // const record = record.id[{match.params.id}];\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \" \", match.params.id); // <div key={match.params.id} className=\"col-sm-12\">\n  //     <h3><span className=\"artist\">{ record.artist } </span>| <span className=\"release\">{ record.title } </span></h3>\n  // </div>\n  // )\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      records: false\n    };\n\n    this.getRecords = () => {\n      fetch('http://localhost:3000/records').then(response => response.json()).then(json => this.setState({\n        records: json\n      })).catch(error => console.error(error));\n    };\n\n    this.handleUpdate = id => {\n      // e.preventDefault();\n      // console.log(`http://localhost:3001/records/${id}`)\n      const records = {\n        artist: this.state.artist,\n        title: this.state.title,\n        format: this.state.format,\n        label: this.state.label,\n        year: this.state.year\n      };\n      const updatedRecord = [];\n      console.log(id);\n      fetch(`http://localhost:3000/records/${id}`, {\n        method: 'PUT'\n      }).then(updatedRecord => {\n        return updatedRecord.json();\n      }).then(updatedRecord => {\n        // updatedRecord.push(records);\n        console.log(updatedRecord); // this.props.getRecords()\n      }).catch(error => console.log(error));\n    };\n\n    this.deleteRecord = (id, i) => {\n      fetch('http://localhost:3000/records/' + id, {\n        method: 'DELETE'\n      }).then(data => {\n        this.setState({\n          records: [...this.state.records.slice(0, i), ...this.state.records.slice(i + 1)]\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getRecords();\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"A Collection of Physical Recordings\")), React.createElement(Route, {\n      path: \"/about/\",\n      exact: true,\n      strict: true,\n      render: () => {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"This is Brendan Ryan's collection\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/show/:id\",\n      exact: true,\n      strict: true,\n      component: Indy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(NewRecords, {\n      records: this.state.records,\n      getRecords: this.getRecords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(React.Fragment, null, React.createElement(Records, {\n      deleteRecord: this.deleteRecord,\n      handleUpdate: this.handleUpdate,\n      records: this.state.records,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/br/Code/project4/record_client/src/App.js"],"names":["React","BrowserRouter","Router","Link","NavLink","Route","Records","NewRecords","Update","axios","Indy","match","params","id","App","Component","state","records","getRecords","fetch","then","response","json","setState","catch","error","console","handleUpdate","artist","title","format","label","year","updatedRecord","log","method","deleteRecord","i","data","slice","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Link, NavLink } from 'react-router-dom';\nimport Route from 'react-router-dom/Route';\nimport Records from './components/Records.js';\nimport NewRecords from './components/NewRecords.js';\nimport Update from './components/Update.js';\n// import Show from './components/Show.js';\nimport axios from 'axios';\nconst Indy = ({match}) => {\n  // const record = record.id[{match.params.id}];\n  return  ( <h1> {match.params.id}</h1>)\n      // <div key={match.params.id} className=\"col-sm-12\">\n      //     <h3><span className=\"artist\">{ record.artist } </span>| <span className=\"release\">{ record.title } </span></h3>\n      // </div>\n  // )\n}\nclass App extends React.Component {\n  state = {\n    records: false\n  }\n  componentDidMount() {\n    this.getRecords();\n  }\n  getRecords = () =>{\n  fetch('http://localhost:3000/records')\n    .then(response => response.json())\n    .then(json => this.setState({records: json}))\n    .catch(error => console.error(error))\n  }\n  // showRecord = (id) => {\n    // axios.get(`http://localhost:3000/records/${id}/`)\n    // .then(response => this.setState({\n    //     artist: response.data.artist,\n    //     title: response.data.title,\n    //     format: response.data.format,\n    //     label: response.data.label,\n    //     year: response.data.year\n    // }));\n  // }\n\n  handleUpdate = (id) => {\n      // e.preventDefault();\n      // console.log(`http://localhost:3001/records/${id}`)\n      const records = {\n          artist: this.state.artist,\n          title: this.state.title,\n          format: this.state.format,\n          label: this.state.label,\n          year: this.state.year\n      };\n      const updatedRecord = [];\n      console.log(id)\n      fetch(`http://localhost:3000/records/${id}`,\n        {\n          method: 'PUT'\n        })\n       .then(updatedRecord => {\n         return updatedRecord.json()\n       })\n       .then(updatedRecord => {\n         // updatedRecord.push(records);\n         console.log(updatedRecord)\n         // this.props.getRecords()\n       })\n       .catch(error => console.log(error))\n      }\n  deleteRecord = (id, i) =>{\n    fetch('http://localhost:3000/records/' + id,\n      {\n        method: 'DELETE'\n      })\n      .then(data => {\n        this.setState({\n          records: [\n            ...this.state.records.slice(0, i),\n            ...this.state.records.slice(i + 1)\n          ]\n        })\n      })\n    }\nrender(){\n  return (\n    <Router>\n    <div className=\"App\">\n    <div className='container'>\n      <div className=\"App-header\">\n        <h1>A Collection of Physical Recordings</h1>\n      </div>\n      <Route path='/about/' exact strict render={\n        () => {\n          return ( <h1>This is Brendan Ryan's collection</h1>);\n        }\n      }/>\n      <Route path='/show/:id' exact strict component={ Indy } />\n      <div className='row'>\n        <>\n          <NewRecords records={this.state.records} getRecords={this.getRecords} />\n        </>\n        <>\n          <Records deleteRecord={this.deleteRecord} handleUpdate={this.handleUpdate} records={this.state.records} />\n        </>\n      </div>\n      </div>\n    </div>\n    </Router>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}